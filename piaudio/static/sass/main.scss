.wrapper {
    margin: auto;

    padding-left: 0.6rem;
    padding-right: 0.6rem;
}

body {
  color: #666666;
  background-color: #222222;
  font-family: Helvetica,Arial,sans-serif;
  text-align: center;
}

#services {
  position: absolute;
  top: 50%;
  left: 50%;
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

/* We style the service div blocks so they are rendered vertically. */
#service {
  display: block;
  position: relative;
}

/* We hide the default radio button as it cannot be styled. */
#service input[type="radio"] {
  display: none;
}

/* We inject an element before the label to be our radio input. */
#service input[type="radio"] + label::before {
  content: "";
  display: inline-block;

  background: #222222;

  border-color: #4a95b1;
  border-radius: 50%;
  border-style: solid;
  border-width: 0.4rem;

  margin-right: 0.3rem;

  height: 3.5rem;
  width: 3.5rem;

  vertical-align: middle;
}

#service label {
  color: #4a95b1;
  font-size: 4.5rem;
  font-weight: bold;
  vertical-align: middle;
}

/* When the radio input is checked, we add a radial-gradient background to simulate the check within the radio circle outline. */
#service input[type="radio"]:checked + label::before {
  /* Using a slight fade between the colour and the transparent outer ring to add some aliasing. */
  background: radial-gradient(#4a95b1 0%, #4a95b1 48%, transparent 50%, transparent);
}

/* When hovered we change the colour of label text. */
#service label:hover {
  color: #cf903e;
}

/* When hovered we change the colour of our injected radio input. */
#service input[type="radio"]:hover + label::before {
  border-color: #cf903e;
}

/* When the injected radio input is hovered and checked we change the colour of the inner check mark. */
#service input[type="radio"]:checked + label:hover::before {
  background: radial-gradient(#cf903e 0%, #cf903e 48%, transparent 50%, transparent);
}
