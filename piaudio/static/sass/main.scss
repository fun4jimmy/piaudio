@charset "utf-8";

$font-size: 4.5rem;
$font-family: Helvetica, Arial, sans-serif;

$transition-time: 0.4s;

$colour-palette:
  #4a95b1,
  #ACACAC,
  #666666,
  #222222,
  #CF903E;

$colour-alternate: nth($colour-palette, 1);
$colour-base: nth($colour-palette, 2);
$colour-background-alternate: nth($colour-palette, 3);
$colour-background-base: nth($colour-palette, 4);
$colour-accent: nth($colour-palette, 5);

// Reset some basic elements, these must come before any other types
body, h1, h2, h3, h4, h5, h6, p, blockquote, pre, hr, dl, dd, ol, ul, figure {
  line-height: 1em;
  margin: 0;
  padding: 0;
}

// Styling for text
%text-base {
  font-family: $font-family;
  font-size: $font-size;
  color: $colour-alternate;
}

%animated {
  -webkit-transition: $transition-time;
  transition: $transition-time;
}

// Base styling for text
body {
  @extend %text-base;
  background-color: $colour-background-base;
}

.service {
  // define the colours for the service switch-style checkbox
  $colour-on: $colour-accent;
  $colour-off: $colour-alternate;

  // define the sizes of the checkbox elements
  $switch-height: 0.6 * $font-size;
  $switch-width: 1.5 * $switch-height;

  $slider-height: 0.8 * $switch-height;
  $slider-width: $slider-height;
  $slider-margin: 0.125 * $switch-height;

  input[type="checkbox"] {
    display: none;

    + label {
      @extend %animated;

      color: $colour-off;

      // checkbox switch using an child element of label
      .checkbox {
        @extend %animated;

        // this allows the slider to be positioned relative to the switch
        display: inline-block;
        position: relative;

        height: $switch-height;
        width: $switch-width;

        border-radius: 0.5 * $switch-height;
        background-color: $colour-off;
      }

      // checbox slider using a psuedo element of the child element of label
      .checkbox:after {
        @extend %animated;

        content: "";

        // manually position the slider inside the switch
        position: absolute;

        top: 50%;
        left: $slider-margin;
        height: $slider-height;
        width: $slider-width;

        // this is to center vertically
        transform: translate(0%, -50%);

        border-radius: 50%;
        background-color: $colour-background-base;
      }
    }
  }

  // Updated state while the checkbox is checked
  input[type="checkbox"]:checked {
    + label {
      color: $colour-on;

      .checkbox {
        background-color: $colour-on;
      }

      .checkbox:after {
        transform: translate($switch-width - ($slider-width + 2 * $slider-margin), -50%);
      }
    }
  }
}
